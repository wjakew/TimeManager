/*
Jakub Wawak
kubawawak@gmail.com
all rights reserved
 */
package generator_gui;

import com.jakubwawak.whours.File_Creator;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import timemanager.TimeManager_Container;
import timemanager.TimeManager_DayPair;
import timemanager.TimeManager_FileConnector;

/**
 *Window for working with files using generator and timemanager
 * @author kubaw
 */
public class whours_window extends javax.swing.JFrame {
    
    int working_hours;
    double money_per_hour;
    String file_src;
    int list_index;
    TimeManager_Container session_tmc;
    
    /**
     * Creates new form whours_window
     */
    public whours_window(String version,String file_src) throws IOException {
        
        working_hours = 168;
        money_per_hour = 18.5;
        list_index = -1;
        
        if ( file_src.equals("") )
            this.file_src = "";
        else
            this.file_src = file_src;
        
        initComponents();
        this.setLocationRelativeTo(null);
        load_window();
        label_version.setText(version);
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_loaddatafile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_data = new javax.swing.JList<>();
        button_addrecord = new javax.swing.JButton();
        button_removerecord = new javax.swing.JButton();
        button_calculate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        field_hours = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        field_cash = new javax.swing.JTextField();
        label_version = new javax.swing.JLabel();
        label_error = new javax.swing.JLabel();
        label_path = new javax.swing.JLabel();
        button_createfile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WHOURS");

        button_loaddatafile.setText("Load data file");
        button_loaddatafile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_loaddatafileActionPerformed(evt);
            }
        });

        list_data.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list_data);

        button_addrecord.setText("Add record");
        button_addrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addrecordActionPerformed(evt);
            }
        });

        button_removerecord.setText("Remove record");
        button_removerecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_removerecordActionPerformed(evt);
            }
        });

        button_calculate.setText("Calculate");
        button_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_calculateActionPerformed(evt);
            }
        });

        jLabel1.setText("Min hours in month: ");

        field_hours.setText("jTextField1");

        jLabel2.setText("Cash per hour:");

        field_cash.setText("jTextField2");

        label_version.setText("vX.XX");

        label_error.setForeground(new java.awt.Color(204, 0, 0));
        label_error.setText("FILE ERROR");

        label_path.setText("jLabel3");

        button_createfile.setText("Create file");
        button_createfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_createfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label_path, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_createfile, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_loaddatafile))
                    .addComponent(button_calculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_hours))
                            .addComponent(button_removerecord, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button_addrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_cash))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label_error)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_version)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_version)
                    .addComponent(label_error))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_loaddatafile)
                    .addComponent(label_path)
                    .addComponent(button_createfile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_addrecord)
                    .addComponent(button_removerecord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(field_hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(field_cash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(button_calculate)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Function for loading window
     */
    void load_window() throws IOException, IOException{
        field_cash.setText(Double.toString(money_per_hour));
        field_hours.setText(Integer.toString(working_hours));
        
        label_error.setVisible(false);
        label_path.setVisible(false);
        
        list_data.setModel(new DefaultListModel());
        list_data.setEnabled(false);
        
        button_removerecord.setEnabled(false);
        button_addrecord.setEnabled(false);
        field_hours.setEnabled(false);
        field_cash.setEnabled(false);
        button_calculate.setEnabled(false);
        
        if ( !this.file_src.equals("") ){
            load_file(this.file_src);
        }
    }
    
    /**
     * Function for loading file
     * @param file_src
     * @throws IOException 
     */
    void load_file(String file_src) throws IOException{
        label_error.setVisible(false);
        TimeManager_FileConnector tfc = new TimeManager_FileConnector(file_src);

        tfc.read_file();

        if ( tfc.exist_flag && tfc.file_read ){
            if ( file_src.length() > 30 ){
                label_path.setText(file_src.substring(0, 30)+"...");
            }
            else{
                label_path.setText(file_src);
            }

            label_path.setVisible(true);
            button_loaddatafile.setEnabled(false);
            session_tmc = new TimeManager_Container(tfc);

            DefaultListModel dlm = new DefaultListModel();

            for( TimeManager_DayPair tmo : session_tmc.time_objects ){
                dlm.addElement(tmo.prepare_glance());
            }
            list_data.setModel(dlm);
            button_removerecord.setEnabled(true);
            button_addrecord.setEnabled(true);
            field_hours.setEnabled(true);
            field_cash.setEnabled(true);
            button_calculate.setEnabled(true);
            list_data.setEnabled(true);
        }
        else{
            label_error.setVisible(true);
        }
    }
    
    /**
     * Function for loading data to the components
     * @throws IOException 
     */
    void load_data() throws IOException{
        if ( !file_src.equals("BLANK") ){
            load_file(file_src);
        }
        else{
            label_error.setVisible(true);
        }
    }
    
    /**
     * Function for loading list
     */
    void load_list() throws IOException{
        DefaultListModel dlm = new DefaultListModel();
        if ( session_tmc.time_objects != null){
            for( TimeManager_DayPair tmo : session_tmc.time_objects ){
                dlm.addElement(tmo.prepare_glance());
            }
            list_data.setModel(dlm);
        }   
    }
    
    private void button_loaddatafileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_loaddatafileActionPerformed
        final JFileChooser fc = new JFileChooser();
        
        int returnVal = fc.showOpenDialog(null);
        
        if ( returnVal == JFileChooser.APPROVE_OPTION ){
            File file = fc.getSelectedFile();
            
            file_src = file.getAbsolutePath();
            try {
                load_data();
            } catch (IOException ex) {
                label_error.setVisible(true);
            }
        }
        else{
            file_src = "BLANK";
        }
        try {
            load_list();
        } catch (IOException ex) {
            label_error.setVisible(true);
        }
        
    }//GEN-LAST:event_button_loaddatafileActionPerformed

    private void list_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_dataMouseClicked
        list_index = list_data.getSelectedIndex();
        System.out.println(list_index);
    }//GEN-LAST:event_list_dataMouseClicked

    private void button_removerecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_removerecordActionPerformed
        if (list_index != -1){
            session_tmc.time_objects.remove(list_index);
            try {
                load_list();
            } catch (IOException ex) {
                label_error.setVisible(true);
            }
        }
    }//GEN-LAST:event_button_removerecordActionPerformed

    private void button_addrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addrecordActionPerformed
        new addrecord_window(this,true,session_tmc);
        try {
            load_list();
        } catch (IOException ex) {
            label_error.setVisible(true);
        }
    }//GEN-LAST:event_button_addrecordActionPerformed

    private void button_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_calculateActionPerformed
        new calculation_window(this,true,session_tmc,Integer.parseInt(field_hours.getText()),Double.parseDouble(field_cash.getText()));
    }//GEN-LAST:event_button_calculateActionPerformed

    private void button_createfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_createfileActionPerformed
        File_Creator fc = new File_Creator();
        try {
            fc.write_file();
            file_src = fc.abs_path();
            fc.show_data();
            load_window();
        } catch (IOException ex) {
            Logger.getLogger(whours_window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(whours_window.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_button_createfileActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_addrecord;
    private javax.swing.JButton button_calculate;
    private javax.swing.JButton button_createfile;
    private javax.swing.JButton button_loaddatafile;
    private javax.swing.JButton button_removerecord;
    private javax.swing.JTextField field_cash;
    private javax.swing.JTextField field_hours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_error;
    private javax.swing.JLabel label_path;
    private javax.swing.JLabel label_version;
    private javax.swing.JList<String> list_data;
    // End of variables declaration//GEN-END:variables
}
